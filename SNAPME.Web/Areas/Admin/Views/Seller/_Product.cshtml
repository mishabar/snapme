@model SNAPME.Tokens.ProductToken

@{
    var conditions = new[] { "New", "Used", "New Other" };
}

<div class="modal-header">
    <div class="modal-title">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title">@(string.IsNullOrEmpty(Model.name) ? "Create Product" : Model.name)</h4>
    </div>
</div>
<div class="modal-body">
    <form role="form" id="frmEditProduct">
        @Html.HiddenFor(m => m.id)
        <div class="row">
            <div class="form-group col-sm-9">
                @Html.LabelFor(m => m.name, "Name")
                @Html.TextBoxFor(m => m.name, new { @class = "form-control" })
            </div>
            <div class="form-group col-sm-3">
                @Html.LabelFor(m => m.condition, "Condition")
                @Html.DropDownListFor(m => m.condition, conditions.Select(c => new SelectListItem { Text = c, Value = c }), new { @class = "form-control" })
            </div>
            <div class="form-group col-sm-12">
                @Html.LabelFor(m => m.short_descritpion, "Short Descritpion")
                @Html.TextAreaFor(m => m.short_descritpion, new { @class = "form-control", rows = 3 })
            </div>
            <div class="form-group col-sm-12">
                @Html.LabelFor(m => m.descritpion, "Descritpion")
                @Html.TextAreaFor(m => m.descritpion, new { @class = "form-control", rows = 5 })
            </div>
            <div class="form-group col-sm-12">
                <label>Images</label>
                <div class="row images">
                    @for (int i = 0; i < 6; i++)
                    {
                        <div class="col-sm-2 text-center">
                            <div class="embed-responsive embed-responsive-16by9" style="background-image: url(@(Model.images == null || Model.images[i] == null ? "/Content/Images/logo.png" : Model.images[i]))">
                                <input type="file" id="@string.Format("image{0}", i)" data-idx="@i" title="Click to select or change the image." />
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="form-group col-sm-4">
                @Html.LabelFor(m => m.retail_price, "Retail Price")
                <div class="input-group">
                    @Html.TextBoxFor(m => m.retail_price, new { @class = "form-control" })
                    <span class="input-group-addon">@System.Globalization.CultureInfo.CurrentUICulture.NumberFormat.CurrencySymbol</span>
                </div>
            </div>
            <div class="form-group col-sm-4">
                @Html.LabelFor(m => m.size, "Size (LxWxH)")
                <div class="input-group">
                    @Html.TextBoxFor(m => m.size, new { @class = "form-control" })
                    <span class="input-group-addon">cm</span>
                </div>
            </div>
            <div class="form-group col-sm-4">
                @Html.LabelFor(m => m.weight, "Weight")
                <div class="input-group">
                    @Html.TextBoxFor(m => m.weight, new { @class = "form-control" })
                    <span class="input-group-addon">kg</span>
                </div>
            </div>
        </div>
    </form>
</div>
<div class="modal-footer">
    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
    <button type="button" class="btn btn-primary" onclick="saveProduct()">Save</button>
</div>
